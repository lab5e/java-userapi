openapi: 3.0.1
info:
  contact:
    email: dev@lab5e.com
    name: Lab5e AS
    url: https://docs.lab5e.com
  description: API to manage teams, members and tokens
  title: The User API
  version: 1.3.10 constant-champ
servers:
- url: https://api.lab5e.com/
security:
- APIToken: []
tags:
- name: User
paths:
  /user/profile:
    get:
      description: Show your user profile information
      operationId: GetUserProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Logged in profile
      tags:
      - profile
      x-accepts: application/json
  /user/teams:
    get:
      description: Update the team. You must be an administrator of the team to edit
        it.
      operationId: ListTeams
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List teams
      tags:
      - teams
      x-accepts: application/json
    post:
      operationId: CreateTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Create team
      tags:
      - teams
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/teams/accept:
    post:
      description: Accept an invite from another user. This will add the currently
        logged in user to the team as a regular memeber. When the invite is accepted
        it is removed from the team's invites and cannot be reused.
      operationId: AcceptInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInviteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Accept invite
      tags:
      - teams
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/teams/{teamId}:
    delete:
      description: Update the team. You must be an administrator of the team to edit
        it.
      operationId: DeleteTeam
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Remove team
      tags:
      - teams
      x-accepts: application/json
    get:
      operationId: RetrieveTeam
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Retrieve team
      tags:
      - teams
      x-accepts: application/json
    patch:
      description: Update the team. You must be an administrator of the team to edit
        it.
      operationId: UpdateTeam
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Update team
      tags:
      - teams
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/teams/{teamId}/invites:
    get:
      description: Update the team. You must be an administrator of the team to edit
        it.
      operationId: ListInvites
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteList'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List invites
      tags:
      - teams
      x-accepts: application/json
    post:
      description: Update the team. You must be an administrator of the team to edit
        it.
      operationId: GenerateInvite
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Generate invite
      tags:
      - teams
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/teams/{teamId}/invites/{code}:
    delete:
      description: Delete an invite created earlier. You must be an administrator
        of the team to perform this action
      operationId: DeleteInvite
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      - description: The invite code.
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInviteResponse'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Delete invite
      tags:
      - teams
      x-accepts: application/json
    get:
      description: Read a single invite from the team's set of non-redeemed invites.
      operationId: RetrieveInvite
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      - description: The invite code.
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Retrieve invite
      tags:
      - teams
      x-accepts: application/json
  /user/teams/{teamId}/members:
    get:
      operationId: RetrieveTeamMembers
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberList'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List members
      tags:
      - teams
      x-accepts: application/json
  /user/teams/{teamId}/members/{userId}:
    delete:
      description: Remove a member from the team. You must be an administrator to
        do this. You can't remove yourself from the team.
      operationId: DeleteMember
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      - description: The user ID
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Remove member
      tags:
      - teams
      x-accepts: application/json
    get:
      operationId: RetrieveMember
      parameters:
      - description: The team ID
        in: path
        name: teamId
        required: true
        schema:
          type: string
      - description: The user ID
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Retrieve member
      tags:
      - teams
      x-accepts: application/json
    patch:
      description: You must be an administrator of the team to update member settings
      operationId: UpdateMember
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Update member
      tags:
      - teams
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/tokens:
    get:
      operationId: ListTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenList'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List tokens
      tags:
      - tokens
      x-accepts: application/json
    post:
      operationId: CreateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Create token
      tags:
      - tokens
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/tokens/{token}:
    delete:
      operationId: DeleteToken
      parameters:
      - description: The token to delete.
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTokenResponse'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Remove token
      tags:
      - tokens
      x-accepts: application/json
    get:
      operationId: RetrieveToken
      parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Retrieve token
      tags:
      - tokens
      x-accepts: application/json
    patch:
      operationId: UpdateToken
      parameters:
      - description: |-
          The token

          Use this in the `X-API-Token` header when using the API.
        in: path
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: A successful response.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: It's created.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: The request has an error.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: You can't touch this
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Couldn't find the resource.
        "409":
          content:
            application/json:
              schema:
                type: object
          description: There's a resource conflict here.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: I'm sorry. We are broken
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Update token
      tags:
      - tokens
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    AcceptInviteRequest:
      example:
        code: code
      properties:
        code:
          description: The invite code to use.
          type: string
      title: Accept an invite
      type: object
    DeleteInviteResponse:
      example:
        invite:
          createdAt: createdAt
          code: code
      properties:
        invite:
          $ref: '#/components/schemas/Invite'
      title: Remove invite response
      type: object
    DeleteTokenResponse:
      example:
        token:
          lastUse: lastUse
          resource: resource
          uses: uses
          write: true
          token: token
          tags:
            key: tags
      properties:
        token:
          $ref: '#/components/schemas/Token'
      title: Remove token response
      type: object
    Invite:
      description: |-
        Invite. Invites are used to share access to teams. You must be an
        administrator to generate invites for a team.
      example:
        createdAt: createdAt
        code: code
      properties:
        code:
          title: The invite code
          type: string
        createdAt:
          description: Time stamp when the invite was generated.
          format: int64
          type: string
      type: object
    InviteList:
      description: |-
        List of active invites. Onece an invite has been redeemed it will be
        removed automatically. An administrator of the team can delete unused
        invites.
      example:
        invites:
        - createdAt: createdAt
          code: code
        - createdAt: createdAt
          code: code
      properties:
        invites:
          items:
            $ref: '#/components/schemas/Invite'
          type: array
      type: object
    InviteRequest:
      example:
        code: code
        teamId: teamId
      properties:
        teamId:
          title: The team ID
          type: string
        code:
          description: The invite code.
          type: string
      title: Request invite details
      type: object
    Member:
      example:
        role: role
        teamId: teamId
        userId: userId
        user:
          profileUrl: profileUrl
          githubLogin: githubLogin
          avatarUrl: avatarUrl
          provider: provider
          logoutUrl: logoutUrl
          name: name
          userId: userId
          email: email
      properties:
        teamId:
          type: string
        role:
          type: string
        userId:
          type: string
        user:
          $ref: '#/components/schemas/UserProfile'
      title: Member of a team
      type: object
    MemberList:
      example:
        members:
        - role: role
          teamId: teamId
          userId: userId
          user:
            profileUrl: profileUrl
            githubLogin: githubLogin
            avatarUrl: avatarUrl
            provider: provider
            logoutUrl: logoutUrl
            name: name
            userId: userId
            email: email
        - role: role
          teamId: teamId
          userId: userId
          user:
            profileUrl: profileUrl
            githubLogin: githubLogin
            avatarUrl: avatarUrl
            provider: provider
            logoutUrl: logoutUrl
            name: name
            userId: userId
            email: email
      properties:
        members:
          items:
            $ref: '#/components/schemas/Member'
          type: array
      title: List of members
      type: object
    Team:
      example:
        teamId: teamId
        members:
        - role: role
          teamId: teamId
          userId: userId
          user:
            profileUrl: profileUrl
            githubLogin: githubLogin
            avatarUrl: avatarUrl
            provider: provider
            logoutUrl: logoutUrl
            name: name
            userId: userId
            email: email
        - role: role
          teamId: teamId
          userId: userId
          user:
            profileUrl: profileUrl
            githubLogin: githubLogin
            avatarUrl: avatarUrl
            provider: provider
            logoutUrl: logoutUrl
            name: name
            userId: userId
            email: email
        isPrivate: true
        tags:
          key: tags
      properties:
        teamId:
          type: string
        isPrivate:
          type: boolean
        tags:
          additionalProperties:
            type: string
          type: object
        members:
          items:
            $ref: '#/components/schemas/Member'
          type: array
      title: A team
      type: object
    TeamList:
      example:
        teams:
        - teamId: teamId
          members:
          - role: role
            teamId: teamId
            userId: userId
            user:
              profileUrl: profileUrl
              githubLogin: githubLogin
              avatarUrl: avatarUrl
              provider: provider
              logoutUrl: logoutUrl
              name: name
              userId: userId
              email: email
          - role: role
            teamId: teamId
            userId: userId
            user:
              profileUrl: profileUrl
              githubLogin: githubLogin
              avatarUrl: avatarUrl
              provider: provider
              logoutUrl: logoutUrl
              name: name
              userId: userId
              email: email
          isPrivate: true
          tags:
            key: tags
        - teamId: teamId
          members:
          - role: role
            teamId: teamId
            userId: userId
            user:
              profileUrl: profileUrl
              githubLogin: githubLogin
              avatarUrl: avatarUrl
              provider: provider
              logoutUrl: logoutUrl
              name: name
              userId: userId
              email: email
          - role: role
            teamId: teamId
            userId: userId
            user:
              profileUrl: profileUrl
              githubLogin: githubLogin
              avatarUrl: avatarUrl
              provider: provider
              logoutUrl: logoutUrl
              name: name
              userId: userId
              email: email
          isPrivate: true
          tags:
            key: tags
      properties:
        teams:
          items:
            $ref: '#/components/schemas/Team'
          title: The list of teams
          type: array
      title: Team list
      type: object
    Token:
      example:
        lastUse: lastUse
        resource: resource
        uses: uses
        write: true
        token: token
        tags:
          key: tags
      properties:
        resource:
          description: |-
            The resource of the token.

            The token applies to the specified resource
            and any resources below this so the resource `/` applies to the root
            resource and any resource below the root resource. In the same manner
            `/collections` will apply to all collectins while `/collections/{id}`
            will apply to that particular collection.
          type: string
        write:
          description: |-
            Write flag for token.

            If this is set to `true` the token can be used for
            write operations in the API such as POST, DELETE and PATCH.
          type: boolean
        token:
          description: Use this in the `X-API-Token` header when using the API.
          title: The token
          type: string
        tags:
          additionalProperties:
            type: string
          description: Tags for the token.
          type: object
        lastUse:
          description: The last time the token was used. Time in ms since epoch.
          format: int64
          type: string
        uses:
          format: int64
          title: The number of times the token has been used
          type: string
      title: An API token
      type: object
    TokenList:
      example:
        tokens:
        - lastUse: lastUse
          resource: resource
          uses: uses
          write: true
          token: token
          tags:
            key: tags
        - lastUse: lastUse
          resource: resource
          uses: uses
          write: true
          token: token
          tags:
            key: tags
      properties:
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
      title: List of tokens
      type: object
    UserProfile:
      description: |-
        Your user profile.
        You can change the contents of the user profile via the log in service you
        are using.
      example:
        profileUrl: profileUrl
        githubLogin: githubLogin
        avatarUrl: avatarUrl
        provider: provider
        logoutUrl: logoutUrl
        name: name
        userId: userId
        email: email
      properties:
        userId:
          type: string
        email:
          type: string
        avatarUrl:
          type: string
        name:
          type: string
        profileUrl:
          type: string
        githubLogin:
          type: string
        provider:
          type: string
        logoutUrl:
          type: string
      type: object
    protobufAny:
      properties:
        typeUrl:
          type: string
        value:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
  securitySchemes:
    APIToken:
      description: API token that must be included in the headers unless you are logged
        in
      in: header
      name: X-API-Token
      type: apiKey
x-original-swagger-version: "2.0"

